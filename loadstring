local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera
local mouse = player:GetMouse()

-- Aimbot settings
local settings = {
    -- Aimbot
    enabled = false,
    key = Enum.KeyCode.E,
    teamCheck = true,
    maxDistance = 1000,
    sensitivity = 0.5,
    fov = 100,
    showFOV = true,
    
    -- ESP Settings
    espEnabled = false,
    boxESP = true,
    nameESP = true,
    distanceESP = true,
    tracerESP = false,
    espColor = Color3.fromRGB(255, 50, 255),
    espTeamColor = false,
    espTransparency = 0.8,
    
    -- Other
    rainbowMode = false
}

-- Remove previous GUI if it exists
for _, v in pairs(CoreGui:GetChildren()) do
    if v.Name == "BlackHoleAimbotGUI" then
        v:Destroy()
    end
end

-- Create GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "BlackHoleAimbotGUI"
ScreenGui.Parent = CoreGui
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 280, 0, 380)
MainFrame.Position = UDim2.new(0.85, -140, 0.5, -190)
MainFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 15)
MainFrame.BorderSizePixel = 0
MainFrame.ClipsDescendants = true
MainFrame.Parent = ScreenGui

-- Add circular gradient for black hole effect
local BlackHoleEffect = Instance.new("ImageLabel")
BlackHoleEffect.Size = UDim2.new(1.5, 0, 1.5, 0)
BlackHoleEffect.Position = UDim2.new(0.5, 0, 0.5, 0)
BlackHoleEffect.AnchorPoint = Vector2.new(0.5, 0.5)
BlackHoleEffect.BackgroundTransparency = 1
BlackHoleEffect.Image = "rbxassetid://4695575676" -- Radial gradient
BlackHoleEffect.ImageColor3 = Color3.fromRGB(20, 20, 40)
BlackHoleEffect.Parent = MainFrame

-- Corner rounding
local Corner = Instance.new("UICorner")
Corner.CornerRadius = UDim.new(0, 10)
Corner.Parent = MainFrame

-- Title bar with glow effect
local TitleBar = Instance.new("Frame")
TitleBar.Size = UDim2.new(1, 0, 0, 40)
TitleBar.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
TitleBar.BorderSizePixel = 0
TitleBar.ZIndex = 3
TitleBar.Parent = MainFrame

local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 10)
TitleCorner.Parent = TitleBar

local TitleGlow = Instance.new("ImageLabel")
TitleGlow.Size = UDim2.new(1, 0, 1, 0)
TitleGlow.BackgroundTransparency = 1
TitleGlow.Image = "rbxassetid://4695575676"
TitleGlow.ImageColor3 = Color3.fromRGB(100, 50, 255)
TitleGlow.ImageTransparency = 0.7
TitleGlow.ZIndex = 2
TitleGlow.Parent = TitleBar

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, -10, 1, 0)
Title.Position = UDim2.new(0, 10, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "Black Hole Aimbot"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 18
Title.Font = Enum.Font.GothamBold
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.ZIndex = 3
Title.Parent = TitleBar

-- Close button
local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -35, 0, 5)
CloseButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 16
CloseButton.Font = Enum.Font.GothamBold
CloseButton.ZIndex = 3
CloseButton.Parent = TitleBar

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 6)
CloseCorner.Parent = CloseButton

-- Content Frame
local Content = Instance.new("ScrollingFrame")
Content.Size = UDim2.new(1, -20, 1, -50)
Content.Position = UDim2.new(0, 10, 0, 45)
Content.BackgroundTransparency = 1
Content.BorderSizePixel = 0
Content.ScrollBarThickness = 4
Content.ScrollBarImageColor3 = Color3.fromRGB(150, 100, 255)
Content.CanvasSize = UDim2.new(0, 0, 0, 620) -- Adjust based on content
Content.Parent = MainFrame

-- Create tab buttons
local TabFrame = Instance.new("Frame")
TabFrame.Size = UDim2.new(1, 0, 0, 40)
TabFrame.BackgroundTransparency = 1
TabFrame.Parent = Content

local AimbotTab = CreateTab("Aimbot", 0)
local ESPTab = CreateTab("ESP", 1/3)
local SettingsTab = CreateTab("Settings", 2/3)

-- Sections
local AimbotSection = CreateSection("AIMBOT SETTINGS", 0, 50)
local ESPSection = CreateSection("ESP SETTINGS", 0, 50)
ESPSection.Visible = false
local SettingsSection = CreateSection("OTHER SETTINGS", 0, 50)
SettingsSection.Visible = false

-- Create FOV Circle
local FOVCircle = Instance.new("Frame")
FOVCircle.Size = UDim2.new(0, 0, 0, 0) -- Set by UpdateFOVCircle function
FOVCircle.AnchorPoint = Vector2.new(0.5, 0.5)
FOVCircle.BackgroundTransparency = 1
FOVCircle.Parent = ScreenGui

local FOVCircleOutline = Instance.new("UIStroke")
FOVCircleOutline.Color = Color3.fromRGB(65, 175, 255)
FOVCircleOutline.Thickness = 2
FOVCircleOutline.Parent = FOVCircle

local FOVCircleCorner = Instance.new("UICorner")
FOVCircleCorner.CornerRadius = UDim.new(1, 0)
FOVCircleCorner.Parent = FOVCircle

-- ESP Containers
local ESPContainer = Instance.new("Folder")
ESPContainer.Name = "ESPContainer"
ESPContainer.Parent = ScreenGui

-- Create Aimbot Controls
local EnabledToggle = CreateToggle(AimbotSection, "Enabled", settings.enabled, 50)
local TeamCheckToggle = CreateToggle(AimbotSection, "Team Check", settings.teamCheck, 100)
local FOVVisibilityToggle = CreateToggle(AimbotSection, "Show FOV", settings.showFOV, 150)

local FOVSlider = CreateSlider(AimbotSection, "FOV Size", 10, 400, settings.fov, 200, function(value)
    settings.fov = value
    UpdateFOVCircle()
end)

local SensitivitySlider = CreateSlider(AimbotSection, "Aimbot Speed", 0.1, 1, settings.sensitivity, 280, function(value)
    settings.sensitivity = value
end)

local DistanceSlider = CreateSlider(AimbotSection, "Max Distance", 100, 5000, settings.maxDistance, 360, function(value)
    settings.maxDistance = value
end)

-- Create ESP Controls
local ESPToggle = CreateToggle(ESPSection, "ESP Enabled", settings.espEnabled, 50)
local BoxESPToggle = CreateToggle(ESPSection, "Box ESP", settings.boxESP, 100)
local NameESPToggle = CreateToggle(ESPSection, "Name ESP", settings.nameESP, 150)
local DistanceESPToggle = CreateToggle(ESPSection, "Distance ESP", settings.distanceESP, 200)
local TracerESPToggle = CreateToggle(ESPSection, "Tracer ESP", settings.tracerESP, 250)
local TeamColorToggle = CreateToggle(ESPSection, "Use Team Colors", settings.espTeamColor, 300)

local ESPColorPicker = CreateColorPicker(ESPSection, "ESP Color", settings.espColor, 350, function(color)
    settings.espColor = color
end)

local ESPTransparencySlider = CreateSlider(ESPSection, "ESP Transparency", 0, 1, settings.espTransparency, 430, function(value)
    settings.espTransparency = value
end)

-- Create Settings Controls
local RainbowToggle = CreateToggle(SettingsSection, "Rainbow FOV", settings.rainbowMode, 50)
local KeybindButton = CreateButton(SettingsSection, "Change Keybind (Current: " .. settings.key.Name .. ")", 100, function()
    local label = KeybindButton:FindFirstChildOfClass("TextLabel")
    label.Text = "Press any key..."
    
    local connection
    connection = UserInputService.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Keyboard then
            settings.key = input.KeyCode
            label.Text = "Change Keybind (Current: " .. settings.key.Name .. ")"
            connection:Disconnect()
        end
    end)
end)

-- Function to update FOV circle
function UpdateFOVCircle()
    if settings.showFOV then
        FOVCircle.Visible = true
        FOVCircle.Position = UDim2.new(0.5, 0, 0.5, 0)
        FOVCircle.Size = UDim2.new(0, settings.fov * 2, 0, settings.fov * 2)
    else
        FOVCircle.Visible = false
    end
end

-- Toggle functions
EnabledToggle.MouseButton1Click:Connect(function()
    settings.enabled = not settings.enabled
    UpdateToggle(EnabledToggle, settings.enabled)
end)

TeamCheckToggle.MouseButton1Click:Connect(function()
    settings.teamCheck = not settings.teamCheck
    UpdateToggle(TeamCheckToggle, settings.teamCheck)
end)

FOVVisibilityToggle.MouseButton1Click:Connect(function()
    settings.showFOV = not settings.showFOV
    UpdateToggle(FOVVisibilityToggle, settings.showFOV)
    UpdateFOVCircle()
end)

ESPToggle.MouseButton1Click:Connect(function()
    settings.espEnabled = not settings.espEnabled
    UpdateToggle(ESPToggle, settings.espEnabled)
    UpdateESP()
end)

BoxESPToggle.MouseButton1Click:Connect(function()
    settings.boxESP = not settings.boxESP
    UpdateToggle(BoxESPToggle, settings.boxESP)
end)

NameESPToggle.MouseButton1Click:Connect(function()
    settings.nameESP = not settings.nameESP
    UpdateToggle(NameESPToggle, settings.nameESP)
end)

DistanceESPToggle.MouseButton1Click:Connect(function()
    settings.distanceESP = not settings.distanceESP
    UpdateToggle(DistanceESPToggle, settings.distanceESP)
end)

TracerESPToggle.MouseButton1Click:Connect(function()
    settings.tracerESP = not settings.tracerESP
    UpdateToggle(TracerESPToggle, settings.tracerESP)
end)

TeamColorToggle.MouseButton1Click:Connect(function()
    settings.espTeamColor = not settings.espTeamColor
    UpdateToggle(TeamColorToggle, settings.espTeamColor)
end)

RainbowToggle.MouseButton1Click:Connect(function()
    settings.rainbowMode = not settings.rainbowMode
    UpdateToggle(RainbowToggle, settings.rainbowMode)
end)

-- Tab switching
AimbotTab.MouseButton1Click:Connect(function()
    AimbotSection.Visible = true
    ESPSection.Visible = false
    SettingsSection.Visible = false
    UpdateTabSelection(AimbotTab, ESPTab, SettingsTab)
end)

ESPTab.MouseButton1Click:Connect(function()
    AimbotSection.Visible = false
    ESPSection.Visible = true
    SettingsSection.Visible = false
    UpdateTabSelection(ESPTab, AimbotTab, SettingsTab)
end)

SettingsTab.MouseButton1Click:Connect(function()
    AimbotSection.Visible = false
    ESPSection.Visible = false
    SettingsSection.Visible = true
    UpdateTabSelection(SettingsTab, AimbotTab, ESPTab)
end)

-- Close button functionality
CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

-- Function to check if a player is in FOV
function isInFOV(targetPlayer)
    local screenPos, onScreen = camera:WorldToScreenPoint(targetPlayer.Character.Head.Position)
    if not onScreen then return false end
    
    local centerScreen = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    local distance = (Vector2.new(screenPos.X, screenPos.Y) - centerScreen).Magnitude
    
    return distance <= settings.fov
end

-- Function to check if a player is valid to target
function isValidTarget(targetPlayer)
    if targetPlayer == player then return false end
    if targetPlayer.Character == nil then return false end
    if not targetPlayer.Character:FindFirstChild("Head") then return false end
    if not targetPlayer.Character:FindFirstChild("Humanoid") then return false end
    if targetPlayer.Character.Humanoid.Health <= 0 then return false end
    
    -- FOV check
    if not isInFOV(targetPlayer) then return false end
    
    -- Team check
    if settings.teamCheck and targetPlayer.Team == player.Team then return false end
    
    -- Check for obstacles (basic raycast)
    local ray = Ray.new(camera.CFrame.Position, (targetPlayer.Character.Head.Position - camera.CFrame.Position).Unit * settings.maxDistance)
    local hit, position = workspace:FindPartOnRay(ray, player.Character, false, true)
    
    if hit and hit:IsDescendantOf(targetPlayer.Character) then
        return true
    elseif not hit then
        return true
    end
    
    return false
end

-- Function to get closest player
function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = settings.maxDistance
    local closestScreenDistance = settings.fov

    for _, p in pairs(Players:GetPlayers()) do
        if p ~= player and p.Character and p.Character:FindFirstChild("Head") then
            local screenPos, onScreen = camera:WorldToScreenPoint(p.Character.Head.Position)
            
            if onScreen then
                local centerScreen = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
                local screenDistance = (Vector2.new(screenPos.X, screenPos.Y) - centerScreen).Magnitude
                
                if screenDistance <= settings.fov then
                    if isValidTarget(p) then
                        local worldDistance = (p.Character.Head.Position - player.Character.Head.Position).Magnitude
                        
                        -- Prioritize players closer to FOV center
                        if screenDistance < closestScreenDistance then
                            closestPlayer = p
                            closestScreenDistance = screenDistance
                            shortestDistance = worldDistance
                        end
                    end
                end
            end
        end
    end
    
    return closestPlayer
end

-- ESP Functions
function CreateESPItem(player)
    if player == Players.LocalPlayer then return end
    
    local ESPFolder = Instance.new("Folder")
    ESPFolder.Name = player.Name
    ESPFolder.Parent = ESPContainer
    
    -- Box ESP
    local Box = Instance.new("Frame")
    Box.Name = "Box"
    Box.BackgroundTransparency = 1
    Box.BorderSizePixel = 0
    Box.Size = UDim2.new(0, 0, 0, 0)
    Box.Parent = ESPFolder
    
    local BoxOutline = Instance.new("UIStroke")
    BoxOutline.Thickness = 2
    BoxOutline.Color = settings.espColor
    BoxOutline.Parent = Box
    
    -- Name ESP
    local NameLabel = Instance.new("TextLabel")
    NameLabel.Name = "NameLabel"
    NameLabel.BackgroundTransparency = 1
    NameLabel.Size = UDim2.new(0, 200, 0, 20)
    NameLabel.Font = Enum.Font.GothamBold
    NameLabel.TextSize = 14
    NameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    NameLabel.TextStrokeTransparency = 0.5
    NameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    NameLabel.Text = player.Name
    NameLabel.Parent = ESPFolder
    
    -- Distance ESP
    local DistanceLabel = Instance.new("TextLabel")
    DistanceLabel.Name = "DistanceLabel"
    DistanceLabel.BackgroundTransparency = 1
    DistanceLabel.Size = UDim2.new(0, 200, 0, 20)
    DistanceLabel.Font = Enum.Font.Gotham
    DistanceLabel.TextSize = 12
    DistanceLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    DistanceLabel.TextStrokeTransparency = 0.5
    DistanceLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    DistanceLabel.Parent = ESPFolder
    
    -- Tracer ESP
    local Tracer = Instance.new("Frame")
    Tracer.Name = "Tracer"
    Tracer.BackgroundColor3 = settings.espColor
    Tracer.BorderSizePixel = 0
    Tracer.AnchorPoint = Vector2.new(0.5, 0)
    Tracer.Parent = ESPFolder
    
    return ESPFolder
end

function UpdateESP()
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= player then
            local folder = ESPContainer:FindFirstChild(p.Name)
            if not folder and settings.espEnabled then
                CreateESPItem(p)
            end
        end
    end
end

-- Connect player events
Players.PlayerAdded:Connect(function(p)
    if settings.espEnabled then
        CreateESPItem(p)
    end
end)

Players.PlayerRemoving:Connect(function(p)
    local folder = ESPContainer:FindFirstChild(p.Name)
    if folder then
        folder:Destroy()
    end
end)

-- Target locking variables
local targetPlayer = nil
local isAiming = false

-- Input handling
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == settings.key and settings.enabled then
        isAiming = not isAiming
        
        if isAiming then
            targetPlayer = getClosestPlayer()
            if targetPlayer then
                local label = CreateStatusLabel("Locked on: " .. targetPlayer.Name)
                task.delay(2, function()
                    label:Destroy()
                end)
            else
                local label = CreateStatusLabel("No valid target found")
                task.delay(2, function()
                    label:Destroy()
                end)
                isAiming = false
            end
        else
            local label = CreateStatusLabel("Aimbot deactivated")
            task.delay(2, function()
                label:Destroy()
            end)
            targetPlayer = nil
        end
    end
end)

-- Update ESP
RunService.RenderStepped:Connect(function()
    -- Always update FOV circle position to center of screen
    FOVCircle.Position = UDim2.new(0.5, 0, 0.5, 0)
    
    -- Rainbow FOV effect
    if settings.rainbowMode then
        local hue = tick() % 5 / 5
        local color = Color3.fromHSV(hue, 1, 1)
        FOVCircleOutline.Color = color
    else
        FOVCircleOutline.Color = Color3.fromRGB(65, 175, 255)
    end
    
    -- Update ESP
    if settings.espEnabled then
        for _, p in pairs(Players:GetPlayers()) do
            if p ~= player and p.Character and p.Character:FindFirstChild("Head") and p.Character:FindFirstChild("HumanoidRootPart") then
                local folder = ESPContainer:FindFirstChild(p.Name)
                if not folder then
                    folder = CreateESPItem(p)
                end
                
                local isTeammate = (settings.teamCheck and p.Team == player.Team)
                local color = settings.espColor
                
                if settings.espTeamColor and p.Team then
                    color = p.Team.TeamColor.Color
                elseif isTeammate then
                    color = Color3.fromRGB(0, 255, 0)
                end
                
                -- Get character positions
                local headPos = p.Character.Head.Position
                local rootPos = p.Character.HumanoidRootPart.Position
                local legPos = rootPos - Vector3.new(0, 3, 0)
                
                local rootScreenPos, rootOnScreen = camera:WorldToScreenPoint(rootPos)
                local headScreenPos = camera:WorldToScreenPoint(headPos)
                local legScreenPos = camera:WorldToScreenPoint(legPos)
                
                if rootOnScreen then
                    -- Box ESP
                    local box = folder:FindFirstChild("Box")
                    if box and settings.boxESP then
                        box.Visible = true
                        
                        local sizeX = math.abs(headScreenPos.Y - legScreenPos.Y) / 2
                        local sizeY = math.abs(headScreenPos.Y - legScreenPos.Y)
                        
                        box.Size = UDim2.new(0, sizeX, 0, sizeY)
                        box.Position = UDim2.new(0, rootScreenPos.X - sizeX/2, 0, rootScreenPos.Y - sizeY/2)
                        box.UIStroke.Color = color
                        box.UIStroke.Transparency = settings.espTransparency
                    elseif box then
                        box.Visible = false
                    end
                    
                    -- Name ESP
                    local nameLabel = folder:FindFirstChild("NameLabel")
                    if nameLabel and settings.nameESP then
                        nameLabel.Visible = true
                        nameLabel.Position = UDim2.new(0, rootScreenPos.X - nameLabel.Size.X.Offset/2, 0, headScreenPos.Y - 40)
                        nameLabel.TextColor3 = color
                        nameLabel.TextTransparency = settings.espTransparency
                    elseif nameLabel then
                        nameLabel.Visible = false
                    end
                    
                    -- Distance ESP
                    local distanceLabel = folder:FindFirstChild("DistanceLabel")
                    if distanceLabel and settings.distanceESP then
                        local distance = math.floor((rootPos - camera.CFrame.Position).Magnitude)
                        distanceLabel.Visible = true
                        distanceLabel.Text = tostring(distance) .. " studs"
                        distanceLabel.Position = UDim2.new(0, rootScreenPos.X - distanceLabel.Size.X.Offset/2, 0, legScreenPos.Y + 5)
                        distanceLabel.TextColor3 = color
                        distanceLabel.TextTransparency = settings.espTransparency
                    elseif distanceLabel then
                        distanceLabel.Visible = false
                    end
                    
                    -- Tracer ESP
                    local tracer = folder:FindFirstChild("Tracer")
                    if tracer and settings.tracerESP then
                        tracer.Visible = true
                        
                        local from = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y)
                        local to = Vector2.new(rootScreenPos.X, rootScreenPos.Y)
                        
                        local distance = (to - from).Magnitude
                        tracer.Size = UDim2.new(0, 1, 0, distance)
                        tracer.Position = UDim2.new(0, from.X, 0, from.Y)
                        
                        local angle = math.atan2(to.Y - from.Y, to.X - from.X)
                        tracer.Rotation = math.deg(angle) - 90
                        
                        tracer.BackgroundColor3 = color
                        tracer.BackgroundTransparency = settings.espTransparency
                    elseif tracer then
                        tracer.Visible = false
                    end
                else
                    -- Hide ESP when off screen
                    for _, item in pairs(folder:GetChildren()) do
                        item.Visible = false
                    end
                end
            end
        end
    else
        -- Hide all ESP
        for _, folder in pairs(ESPContainer:GetChildren()) do
            for _, item in pairs(folder:GetChildren()) do
                item.Visible = false
            end
        end
    end
    
    -- Aimbot logic
    if isAiming and targetPlayer and settings.enabled then
        if isValidTarget(targetPlayer) then
            local targetPosition = targetPlayer.Character.Head.Position
            
            -- Smoothly move camera towards target
            local targetCFrame = CFrame.new(camera.CFrame.Position, targetPosition)
            camera.CFrame = camera.CFrame:Lerp(targetCFrame, settings.sensitivity)
        else
            -- Target no longer valid
            isAiming = false
            targetPlayer = nil
            local label = CreateStatusLabel("Target lost")
            task.delay(2, function()
                label:Destroy()
            end)
        end
    end
end)

-- Initialize
UpdateFOVCircle()
UpdateESP()
UpdateTabSelection(AimbotTab, ESPTab, SettingsTab)

-- Make GUI draggable
local dragging = false
local dragInput
local dragStart
local startPos

local function updateDrag(input)
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

TitleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateDrag(input)
    end
end)
